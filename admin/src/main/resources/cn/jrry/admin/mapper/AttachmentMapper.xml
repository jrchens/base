<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jrry.web.mapper.AttachmentMapper">
  <resultMap id="BaseResultMap" type="cn.jrry.web.domain.Attachment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="original_file_name" jdbcType="VARCHAR" property="originalFileName" />
    <result column="save_path" jdbcType="VARCHAR" property="savePath" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_size" jdbcType="BIGINT" property="fileSize" />
    <result column="file_type" jdbcType="VARCHAR" property="fileType" />
    <result column="file_sha1" jdbcType="VARCHAR" property="fileSha1" />
    <result column="owner" jdbcType="VARCHAR" property="owner" />
    <result column="is_deleted" jdbcType="BIT" property="deleted" />
    <result column="cruser" jdbcType="VARCHAR" property="cruser" />
    <result column="crtime" jdbcType="TIMESTAMP" property="crtime" />
    <result column="mduser" jdbcType="VARCHAR" property="mduser" />
    <result column="mdtime" jdbcType="TIMESTAMP" property="mdtime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from attachment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.jrry.web.domain.Attachment" useGeneratedKeys="true" keyProperty="id">
    insert into attachment (original_file_name, save_path,
      file_name, file_size, file_type, 
      file_sha1, owner, is_deleted, 
      cruser, crtime, mduser, mdtime)
    values (#{originalFileName,jdbcType=VARCHAR}, #{savePath,jdbcType=VARCHAR},
      #{fileName,jdbcType=VARCHAR}, #{fileSize,jdbcType=BIGINT}, #{fileType,jdbcType=VARCHAR}, 
      #{fileSha1,jdbcType=VARCHAR}, #{owner,jdbcType=VARCHAR}, 0,
      #{cruser,jdbcType=VARCHAR}, #{crtime,jdbcType=TIMESTAMP},#{mduser,jdbcType=VARCHAR}, #{mdtime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.jrry.web.domain.Attachment">
    update attachment
    set original_file_name = #{originalFileName,jdbcType=VARCHAR},
      save_path = #{savePath,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=BIGINT},
      file_type = #{fileType,jdbcType=VARCHAR},
      file_sha1 = #{fileSha1,jdbcType=VARCHAR},
      owner = #{owner,jdbcType=VARCHAR},
      mduser = #{mduser,jdbcType=VARCHAR},
      mdtime = #{mdtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="selectColumns"/>
    from attachment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="selectColumns"/>
    from attachment
  </select>


  <sql id="selectColumns">
    id, original_file_name, save_path, file_name, file_size, file_type, file_sha1,
    owner,cruser,crtime
  </sql>
  <sql id="selectWhereCondition">
    <where>
      is_deleted = 0
      <if test="originalFileName != null and originalFileName != ''">
        <bind name="originalFileName" value="'%' + originalFileName + '%'"/>
        and original_file_name LIKE #{originalFileName,jdbcType=VARCHAR}
      </if>
      <if test="fileSha1 != null and fileSha1 != ''">
        and file_sha1 = #{fileSha1,jdbcType=VARCHAR}
      </if>
      <if test="owner != null and owner != ''">
        and owner = #{owner,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>

  <select id="selectByFileSha1" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="selectColumns"/>
    from attachment
    where file_sha1 = #{fileSha1,jdbcType=VARCHAR} limit 1
  </select>
  <update id="removeByPrimaryKey" parameterType="cn.jrry.web.domain.Attachment">
    update attachment
    set
    is_deleted = 1,
    mduser = #{mduser,jdbcType=VARCHAR},
    mdtime = #{mdtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="count" resultType="int">
    select
    COUNT(1)
    from attachment
    <include refid="selectWhereCondition"/>
  </select>
  <select id="select" resultMap="BaseResultMap">
    select
    <include refid="selectColumns"/>
    from attachment
    <include refid="selectWhereCondition"/>
    ORDER BY ${sort} ${order}
    limit ${offset},${rows}
  </select>
</mapper>