<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jrry.gen.mapper.TabMapper">
  <resultMap id="BaseResultMap" type="cn.jrry.gen.domain.Tab">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tinyint_boolean" jdbcType="BIT" property="tinyintBoolean" />
    <result column="int_integer" jdbcType="INTEGER" property="intInteger" />
    <result column="double_double" jdbcType="DOUBLE" property="doubleDouble" />
    <result column="date_date" jdbcType="DATE" property="dateDate" />
    <result column="time_time" jdbcType="TIME" property="timeTime" />
    <result column="datetime_timestamp" jdbcType="TIMESTAMP" property="datetimeTimestamp" />
    <result column="varchar_string" jdbcType="VARCHAR" property="varcharString" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.jrry.gen.domain.Tab">
    <result column="text_string" jdbcType="LONGVARCHAR" property="textString" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, tinyint_boolean, int_integer, double_double, date_date, time_time, datetime_timestamp, 
    varchar_string
  </sql>
  <sql id="Blob_Column_List">
    text_string
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.jrry.gen.domain.TabExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sample_tab
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.jrry.gen.domain.TabExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sample_tab
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sample_tab
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sample_tab
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jrry.gen.domain.TabExample">
    delete from sample_tab
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jrry.gen.domain.Tab">
    insert into sample_tab (id, tinyint_boolean, int_integer, 
      double_double, date_date, time_time, 
      datetime_timestamp, varchar_string, text_string
      )
    values (#{id,jdbcType=BIGINT}, #{tinyintBoolean,jdbcType=BIT}, #{intInteger,jdbcType=INTEGER}, 
      #{doubleDouble,jdbcType=DOUBLE}, #{dateDate,jdbcType=DATE}, #{timeTime,jdbcType=TIME}, 
      #{datetimeTimestamp,jdbcType=TIMESTAMP}, #{varcharString,jdbcType=VARCHAR}, #{textString,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.jrry.gen.domain.Tab">
    insert into sample_tab
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tinyintBoolean != null">
        tinyint_boolean,
      </if>
      <if test="intInteger != null">
        int_integer,
      </if>
      <if test="doubleDouble != null">
        double_double,
      </if>
      <if test="dateDate != null">
        date_date,
      </if>
      <if test="timeTime != null">
        time_time,
      </if>
      <if test="datetimeTimestamp != null">
        datetime_timestamp,
      </if>
      <if test="varcharString != null">
        varchar_string,
      </if>
      <if test="textString != null">
        text_string,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="tinyintBoolean != null">
        #{tinyintBoolean,jdbcType=BIT},
      </if>
      <if test="intInteger != null">
        #{intInteger,jdbcType=INTEGER},
      </if>
      <if test="doubleDouble != null">
        #{doubleDouble,jdbcType=DOUBLE},
      </if>
      <if test="dateDate != null">
        #{dateDate,jdbcType=DATE},
      </if>
      <if test="timeTime != null">
        #{timeTime,jdbcType=TIME},
      </if>
      <if test="datetimeTimestamp != null">
        #{datetimeTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="varcharString != null">
        #{varcharString,jdbcType=VARCHAR},
      </if>
      <if test="textString != null">
        #{textString,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jrry.gen.domain.TabExample" resultType="java.lang.Long">
    select count(*) from sample_tab
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sample_tab
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.tinyintBoolean != null">
        tinyint_boolean = #{record.tinyintBoolean,jdbcType=BIT},
      </if>
      <if test="record.intInteger != null">
        int_integer = #{record.intInteger,jdbcType=INTEGER},
      </if>
      <if test="record.doubleDouble != null">
        double_double = #{record.doubleDouble,jdbcType=DOUBLE},
      </if>
      <if test="record.dateDate != null">
        date_date = #{record.dateDate,jdbcType=DATE},
      </if>
      <if test="record.timeTime != null">
        time_time = #{record.timeTime,jdbcType=TIME},
      </if>
      <if test="record.datetimeTimestamp != null">
        datetime_timestamp = #{record.datetimeTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.varcharString != null">
        varchar_string = #{record.varcharString,jdbcType=VARCHAR},
      </if>
      <if test="record.textString != null">
        text_string = #{record.textString,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update sample_tab
    set id = #{record.id,jdbcType=BIGINT},
      tinyint_boolean = #{record.tinyintBoolean,jdbcType=BIT},
      int_integer = #{record.intInteger,jdbcType=INTEGER},
      double_double = #{record.doubleDouble,jdbcType=DOUBLE},
      date_date = #{record.dateDate,jdbcType=DATE},
      time_time = #{record.timeTime,jdbcType=TIME},
      datetime_timestamp = #{record.datetimeTimestamp,jdbcType=TIMESTAMP},
      varchar_string = #{record.varcharString,jdbcType=VARCHAR},
      text_string = #{record.textString,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sample_tab
    set id = #{record.id,jdbcType=BIGINT},
      tinyint_boolean = #{record.tinyintBoolean,jdbcType=BIT},
      int_integer = #{record.intInteger,jdbcType=INTEGER},
      double_double = #{record.doubleDouble,jdbcType=DOUBLE},
      date_date = #{record.dateDate,jdbcType=DATE},
      time_time = #{record.timeTime,jdbcType=TIME},
      datetime_timestamp = #{record.datetimeTimestamp,jdbcType=TIMESTAMP},
      varchar_string = #{record.varcharString,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jrry.gen.domain.Tab">
    update sample_tab
    <set>
      <if test="tinyintBoolean != null">
        tinyint_boolean = #{tinyintBoolean,jdbcType=BIT},
      </if>
      <if test="intInteger != null">
        int_integer = #{intInteger,jdbcType=INTEGER},
      </if>
      <if test="doubleDouble != null">
        double_double = #{doubleDouble,jdbcType=DOUBLE},
      </if>
      <if test="dateDate != null">
        date_date = #{dateDate,jdbcType=DATE},
      </if>
      <if test="timeTime != null">
        time_time = #{timeTime,jdbcType=TIME},
      </if>
      <if test="datetimeTimestamp != null">
        datetime_timestamp = #{datetimeTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="varcharString != null">
        varchar_string = #{varcharString,jdbcType=VARCHAR},
      </if>
      <if test="textString != null">
        text_string = #{textString,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.jrry.gen.domain.Tab">
    update sample_tab
    set tinyint_boolean = #{tinyintBoolean,jdbcType=BIT},
      int_integer = #{intInteger,jdbcType=INTEGER},
      double_double = #{doubleDouble,jdbcType=DOUBLE},
      date_date = #{dateDate,jdbcType=DATE},
      time_time = #{timeTime,jdbcType=TIME},
      datetime_timestamp = #{datetimeTimestamp,jdbcType=TIMESTAMP},
      varchar_string = #{varcharString,jdbcType=VARCHAR},
      text_string = #{textString,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jrry.gen.domain.Tab">
    update sample_tab
    set tinyint_boolean = #{tinyintBoolean,jdbcType=BIT},
      int_integer = #{intInteger,jdbcType=INTEGER},
      double_double = #{doubleDouble,jdbcType=DOUBLE},
      date_date = #{dateDate,jdbcType=DATE},
      time_time = #{timeTime,jdbcType=TIME},
      datetime_timestamp = #{datetimeTimestamp,jdbcType=TIMESTAMP},
      varchar_string = #{varcharString,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>